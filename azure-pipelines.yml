# Nexus5XPkg CI build on VSTS

trigger:
  branches:
    include:
    - master
    - experimental
    - experimental-psci
  paths:
    exclude:
    - README.md
    - LICENSE

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: sudo apt update 
  displayName: 'Update APT sources'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10'
    architecture: 'x64'
  displayName: Install correct Python

# Travis have this by default, because we preinstalled build-essentials
- script: sudo apt install uuid-dev flex bison gcc-aarch64-linux-gnu
  displayName: 'Install VSTS dependencies'

- script: |
    git submodule update --init --recursive
  displayName: Fetch Submodules

# Initialize submodules
- script: git submodule init
  displayName: 'Initialize submodules'

# Fix-up directory link for VSTS, force replace current reference
- script: sudo ln -sfn $(pwd) ../Nexus5XPkg
  displayName: 'Fix directory links'

# Build iASL tool from repository
# Eventually we will just install prepackaged version
# - script: git clone https://github.com/acpica/acpica acpica-tools
#   displayName: 'Checkout ACPICA tools repository'

# - script: cd acpica-tools && make clean && make && sudo make install && cd ..
#   displayName: 'Build and install ACPICA tools'

- script: sudo ./Tools/CI/Bootstrapper/Stage0.sh
  displayName: 'Prepare pre-build environment, phase 0'

- script: ./Tools/CI/Bootstrapper/Stage1.sh
  displayName: 'Prepare pre-build environment, phase 1'

- script: chmod +x ./Tools/CI/Builder/build_boot_shim.sh && ./Tools/CI/Builder/build_boot_shim.sh
  displayName: 'BootShim build'

- script: ./Tools/CI/Builder/Build.sh
  displayName: 'UEFI build'

- script: chmod +x ./build_boot_images.sh && ./build_boot_images.sh
  displayName: 'UEFI boot images build'

# Publish UEFI (2 targets)
- task: PublishBuildArtifacts@1
  displayName: 'Publish UEFI build (Nexus 5X)'
  inputs:
    pathtoPublish: ../edk2/Build/Nexus5X-AARCH64/DEBUG_CLANGDWARF/FV/uefi.img
    artifactName: MSM8992 UEFI (Nexus 5X)